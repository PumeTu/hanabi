from collections import Dict
from tensor import Tensor
from random import rand

@value
struct Node[T: DType]:
    var tensor: Tensor[T]

    fn __init__(inout self, tensor: Tensor[T]):
        self.tensor = tensor
        
    fn __add__(inout self, other: Self) raises -> Self:
        var out = self.tensor + other.tensor
        return Self(out)

fn main() raises:
    var t1 = Node(rand[DType.float32](3, 3))
    var t2 = Node(rand[DType.float32](3, 3))
    var out = t1 + t2
    print(out.tensor)
